(desc:(eng:"You should enter subspace using `Camera settings` -> `Inside subspace`",rus:"You should enter subspace using `Camera settings` -> `Inside subspace`"),cam:(look_at:(0,0,0),alpha:-45.1965493518633,beta:1.4093963702768257,r:10.984499318523659,offset_after_material:0.000025),uniforms:(ids:(available:[(1),(2),(3),(4),(5),(6),(7),(8)],max:11),storage:{(0):Named(Bool(true),"enable_portals"),(9):Named(Bool(true),"enable_object"),(10):Named(Int((min:Some(0),max:None,value:30)),"subspace_degree")},storage_order:[(10),(9),(0)]),matrices:(ids:(available:[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)],max:18),storage:{(13):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(14):Named(Simple(offset:(-0.86,0,0),scale:0.3,rotate:(0,0,0),mirror:(false,false,false)),"obj"),(15):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"a"),(16):Named(Simple(offset:(0,0,0),scale:0.42,rotate:(1.2740903539558606,5.846852994181004,6.19591884457987),mirror:(false,false,false)),"b0"),(17):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)))},storage_order:[(14),(15),(16)]),objects:(ids:(available:[(0),(1),(2),(3),(4),(5)],max:8),storage:{(6):Named(Complex(kind:Simple(Some(((13)))),intersect:(("if (enable_object_u == 0) { return scene_intersection_none; }\r\n\r\nSceneIntersection result = scene_intersection_none;\r\nSceneIntersection ihit = scene_intersection_none;\r\nRay transformed_ray;\r\nfloat len = 0.;\r\nRay r3;\r\nvec4 pos;\r\n\r\nvec3 cube_size = vec3(1.0, 1.0, 1.0);\r\nmat4 mat_transform = mat4(1.);\r\nmat4 mat_transform_inv = mat4(1.);\r\n\r\nfor (int i = 0; i < 1000; i++) { if (i >= subspace_degree_u) break; // !FOR_NUMBER!\r\nfor (int i = 0; i < subspace_degree_u; i++) { // !FOR_VARIABLE!\r\n    transformed_ray = transform(obj_mat_inv, transform(mat_transform_inv, r));\r\n    len = length(transformed_ray.d);\r\n    transformed_ray = normalize_ray(transformed_ray);\r\n    ihit = intersect_box(transformed_ray, companion_cube_M, cube_size);\r\n    ihit.hit.t /= len;\r\n    if (nearer(result.hit, ihit.hit)) {\r\n        result = ihit;\r\n        result.hit.n = normalize((mat_transform * (obj_mat * vec4(ihit.hit.n, 0.))).xyz);\r\n    }\r\n\r\n    transformed_ray = transform(obj_mat_inv, transform(mat_transform, r));\r\n    len = length(transformed_ray.d);\r\n    transformed_ray = normalize_ray(transformed_ray);\r\n    ihit = intersect_box(transformed_ray, companion_cube_M, cube_size);\r\n    ihit.hit.t /= len;\r\n    if (nearer(result.hit, ihit.hit)) {\r\n        result = ihit;\r\n        result.hit.n = normalize((mat_transform_inv * (obj_mat * vec4(ihit.hit.n, 0.))).xyz);\r\n    }\r\n\r\n    mat_transform_inv = a_mat * (b0_mat_inv * mat_transform_inv);\r\n    mat_transform = b0_mat * (a_mat_inv * mat_transform);\r\n}\r\n\r\nreturn result;\r\n")),in_subspace:Subspace),"object_subspace"),(7):Named(Complex(kind:Portal(Some(((15))),Some(((16)))),intersect:(("if (enable_portals_u == 0) return scene_intersection_none;\n\nvec3 op = -r.o.xyz;\nfloat b = dot(op, r.d.xyz);\nfloat det = b*b - dot(op, op) + 1.0;\nif (det < 0.) return scene_intersection_none;\n\ndet = sqrt(det);\nfloat t = b - det;\nif (t < 0.) t = b + det;\nif (t < 0.) return scene_intersection_none;\n\nvec4 pos = r.o + r.d * t;\nvec3 n = normalize(pos.xyz);\n\nfloat u = atan(pos.z, pos.x) / PI;\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y) / PI;\n\nint material = portal_blue_M;\nif (first) material = portal_orange_M;\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, u, v, n), false);")),in_subspace:Subspace),"sphere_subspace")},storage_order:[(6),(7)]),cameras:(ids:(available:[],max:0),storage:{},storage_order:[]),textures:(ids:(available:[],max:0),storage:{},storage_order:[]),materials:(ids:(available:[(0),(1),(2),(3),(4),(5),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)],max:22),storage:{(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:true,grid_scale:16,grid_coef:0.3,grid2:true,grid3:false),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:16,grid_coef:0.3,grid2:true,grid3:false),"portal_orange"),(21):Named(Complex(code:(("return material_simple(hit, r, companion_cube_color(hit.u, hit.v), 5e-1, false, 4e0, 3e-1);\r"))),"companion_cube")},storage_order:[(6),(7),(21)]),intersection_materials:(ids:(available:[],max:0),storage:{},storage_order:[]),library:(ids:(available:[(0),(3)],max:5),storage:{(1):Named((("SceneIntersection intersect_box(Ray r, int material, vec3 rad) {\r\n  vec3 m = 1.0/r.d.xyz;\r\n  vec3 n = m*r.o.xyz;\r\n  vec3 k = abs(m)*rad;\r\n  vec3 t1 = -n - k;\r\n  vec3 t2 = -n + k;\r\n\r\n  float tN = max( max( t1.x, t1.y ), t1.z );\r\n  float tF = min( min( t2.x, t2.y ), t2.z );\r\n\r\n  float t = tN;\r\n  if (tN < 0.0 && tF > 0.0) t = tF;\r\n\r\n  if(tN > tF) return scene_intersection_none;\r\n\r\n  if(t < 0.0) return scene_intersection_none;\r\n\r\n  vec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\r\n\r\n  vec3 pos = (r.o + r.d * t).xyz;\r\n  vec3 pos_coords = pos;\r\n  pos_coords = pos_coords.xzy;\r\n  pos = pos.xzy;\r\n\r\n  vec2 uv = vec2(pos_coords.x, pos_coords.y);\r\n  if (pos.z < 0.) uv.x = -uv.x;\r\n  if (abs(abs(pos.x) - rad.x) < 0.0001) {\r\n    uv = vec2(pos_coords.y, pos_coords.z);\r\n    if (pos.x < 0.) uv.x = -uv.x;\r\n  }\r\n  if (abs(abs(pos.y) - rad.y) < 0.0001) {\r\n    uv = vec2(pos_coords.x, pos_coords.z);\r\n    if (pos.y > 0.) uv.x = -uv.x;\r\n  }\r\n\r\n  return SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\r\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(4):Named((("vec3 companion_cube_color(float u, float v) {\r\n  float mul = 1.;\r\n  float dist = sqrt(u * u + v * v);\r\n  float circle_size = 0.6;\r\n  float circle_border = 0.03;\r\n  if (dist < circle_size + circle_border && dist > circle_size) { mul = 0.4; }\r\n  if (dist > circle_size + circle_border) { mul = (PI + atan(u, v))/(2.0*PI); }\r\n\r\n  if (dist < circle_size) {\r\n    float scale = 3.;\r\n    float x = u * scale;\r\n    float y = v * scale + 0.26;\r\n    float temp1 = x*x + y*y - 1.;\r\n    if (temp1 * temp1 * temp1 - x * x * y * y * y < 0.) {\r\n      return vec3(222., 35., 138.) / 255.;\r\n    }\r\n  }\r\n\r\n  return color_grid3(vec3(9.176470588235294e-1, 9.176470588235294e-1, 9.176470588235294e-1) * mul, vec2(u + 1., v + 1.));\r\n}")),"companion_cube")},storage_order:[(2),(1),(4)]),animations_filters:(uniforms:({((0)):true,((9)):true,((10)):true}),matrices:({((14)):true,((15)):true,((16)):true}),cameras:({})),elements_descriptions:(uniforms:({((0)):(help_description:None,overrided_name:"Enable portals"),((9)):(help_description:None,overrided_name:"Enable object"),((10)):(help_description:None,overrided_name:"Subspace degree")}),matrices:({((14)):(help_description:None,overrided_name:"Object"),((15)):(help_description:None,overrided_name:"First portal"),((16)):(help_description:None,overrided_name:"Second portal")}),cameras:({})),user_uniforms:(uniforms:({((0)):false,((9)):false,((10)):false}),matrices:({((14)):false,((15)):false,((16)):false})),animation_stages:(ids:(available:[],max:1),storage:{(0):Named((name:(eng:"Explore",rus:"Explore"),description:None,uniforms:({((0)):ProvidedToUser,((9)):ProvidedToUser,((10)):ProvidedToUser}),matrices:({((14)):ProvidedToUser,((15)):ProvidedToUser,((16)):ProvidedToUser}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"explore")},storage_order:[(0)]),current_stage:Animation(((0))),dev_stage:(uniforms:({((0)):Bool(true),((9)):Bool(true),((10)):Int((min:Some(0),max:None,value:30))}),matrices:({((14)):Simple(offset:(-0.86,0,0),scale:0.3,rotate:(0,0,0),mirror:(false,false,false)),((15)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((16)):Simple(offset:(0,0,0),scale:0.42,rotate:(1.2740903539558606,5.846852994181004,6.19591884457987),mirror:(false,false,false))})),animations:(ids:(available:[],max:0),storage:{},storage_order:[]),use_time:false,skybox:None)
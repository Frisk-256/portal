(desc:(eng:"This is the what people came up when you ask them to invent triple portal. Here one \"portal\" has front and back parts, and each front part of a current color teleports to back part of next color, i.e. red to green, green to blue, blue to red.\n\nI won\'t call it real triple portal, because one part has two portal surfaces. I want to see portal with tree parts, where one part has one continious portal surface.",rus:"Обычно такой ответ выдают, когда предлагаешь им изобрести тройной портал. Здесь один \"портал\" имеет переднюю и заднюю часть, и каждая передняя часть текущего цвета телепортирует на заднюю часть следующего цвета, то есть красный на зелёный, зелёный на синий, синий на красный.\n\nЯ бы не назвал это настоящим порталом из трёх частей, поэтому его название и взято в кавычки, потому что одна часть имеет две портальные поверхности. Я бы хотел видеть портал из трёх частей с одной непрерывной поверхностью."),cam:(look_at:(0,0,0),alpha:3.6541287700322065,beta:1.1135568237304678,r:3.850000000000052,offset_after_material:0.000025),uniforms:(ids:(available:[],max:17),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Bool(false),"mirror"),(9):Named(Progress(0),"progress"),(10):Inline(Formula(("(1-progress)*pi()/3*2"))),(11):Inline(Formula(("1.3+1-(progress-0.5)^2/0.25"))),(12):Named(Bool(false),"show_process"),(13):Inline(Bool(true)),(14):Inline(Bool(false)),(15):Inline(Formula(("easing_in_out(time)"))),(16):Inline(Progress(1))},storage_order:[(0),(1),(2),(6),(7),(8),(9),(12)]),matrices:(ids:(available:[],max:43),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Mul(to:Some(((33))),what:Some(((28)))),"c"),(14):Named(Mul(to:Some(((22))),what:Some(((30)))),"b"),(15):Named(Mul(to:Some(((32))),what:Some(((20)))),"a"),(16):Inline(Mul(to:Some(((18))),what:Some(((37))))),(17):Inline(Mul(to:Some(((19))),what:Some(((14))))),(18):Inline(Simple(offset:(0,0,0.001),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(19):Inline(Simple(offset:(0,0,-0.001),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(20):Named(Simple(offset:(0,0,1.3),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"symm"),(21):Inline(Mul(to:Some(((23))),what:Some(((13))))),(22):Inline(Mul(to:Some(((31))),what:Some(((20))))),(23):Inline(Simple(offset:(0,0,-0.001),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(24):Inline(If(condition:Yes(Some(((12)))),then:Some(((41))),otherwise:Some(((13))))),(25):Inline(Mul(to:Some(((27))),what:Some(((15))))),(26):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(27):Inline(Simple(offset:(0,0,-0.001),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(28):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,4.1887902047863905,0),mirror:(false,false,false))),(29):Named(Simple(offset:(-0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"a_custom"),(30):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,2.0943951023931953,0),mirror:(false,false,false))),(31):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"b_custom"),(32):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"c_custom"),(33):Inline(Mul(to:Some(((29))),what:Some(((20))))),(34):Named(Mul(to:Some(((36))),what:Some(((35)))),"construct"),(35):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((10)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(36):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((11))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(37):Inline(If(condition:Yes(Some(((12)))),then:Some(((34))),otherwise:Some(((15))))),(38):Inline(If(condition:Yes(Some(((12)))),then:Some(((39))),otherwise:Some(((14))))),(39):Inline(Mul(to:Some(((34))),what:Some(((40))))),(40):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,2.0943951023931953,0),mirror:(false,false,false))),(41):Inline(Mul(to:Some(((34))),what:Some(((42))))),(42):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,4.1887902047863905,0),mirror:(false,false,false)))},storage_order:[(0),(13),(14),(15),(20),(29),(31),(32),(34)]),objects:(ids:(available:[],max:9),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);")),in_subspace:Normal),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);")),in_subspace:Normal),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);")),in_subspace:Normal),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);")),in_subspace:Normal),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);")),in_subspace:Normal),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);")),in_subspace:Normal),"room_z-"),(6):Named(Flat(kind:Portal(Some(((16))),Some(((17)))),is_inside:(("return is_inside_portal(\n  circle_distance(x, y),\n  1.0,\n  0.05,\n  0.01,\n  solid_red_M,\n  solid_red_M,\n  solid_0_M,\n  solid_0_M,\n  back,\n  first\n);")),in_subspace:Normal),"a"),(7):Named(Flat(kind:Portal(Some(((38))),Some(((21)))),is_inside:(("return is_inside_portal(\n  circle_distance(x, y),\n  1.0,\n  0.05,\n  0.01,\n  solid_green_M,\n  solid_green_M,\n  solid_1_M,\n  solid_1_M,\n  back,\n  first\n);")),in_subspace:Normal),"b"),(8):Named(Flat(kind:Portal(Some(((24))),Some(((25)))),is_inside:(("return is_inside_portal(\n  circle_distance(x, y),\n  1.0,\n  0.05,\n  0.01,\n  solid_blue_M,\n  solid_blue_M,\n  solid_2_M,\n  solid_2_M,\n  back,\n  first\n);")),in_subspace:Normal),"c")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8)]),cameras:(ids:(available:[],max:4),storage:{(0):Inline((look_at:Coordinate((0,0,0)),alpha:1.5707963267948966,beta:0.01,r:3.1818181818182243,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(1):Inline((look_at:Coordinate((0,0,0)),alpha:-1.1692042072627202,beta:1.36918197631836,r:3.1818181818182243,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(2):Inline((look_at:Coordinate((0,0,0)),alpha:1.5707963267948966,beta:1.2257829284667956,r:3.850000000000052,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(3):Inline((look_at:Coordinate((0,0,0)),alpha:7.853981633974483,beta:1.2257829284667956,r:3.850000000000052,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)))},storage_order:[]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:24),storage:{(0):Named(Simple(color:(0.8980392156862745,0.8313725490196079,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_yellow"),(1):Named(Simple(color:(0.050980392156862744,0.050980392156862744,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_black"),(2):Named(Simple(color:(0.9058823529411765,0.29411764705882354,0.29411764705882354),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_red"),(3):Named(Simple(color:(0.2235294117647059,0.2235294117647059,0.2235294117647059),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_gray"),(4):Named(Simple(color:(0.3137254901960784,0.38823529411764707,0.9254901960784314),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_blue"),(5):Named(Simple(color:(0.2627450980392157,0.8470588235294118,0.30196078431372547),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:false,grid3:false),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:true,grid3:false),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:true,grid3:false),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:true,grid3:false),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3,grid2:true,grid3:false),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(2.627450980392157e-1, 8.470588235294118e-1, 3.0196078431372547e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(3.137254901960784e-1, 3.8823529411764707e-1, 9.254901960784314e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black"),(21):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0e0, 6.8834305e-1, 5.300317e-2), 5e-1, false, 4e0, 3e-1);\nreturn result;"))),"solid_green"),(22):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0e0, 3.3666754e-1, 1e0), 5e-1, false, 4e0, 3e-1);\nreturn result;"))),"solid_blue"),(23):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1e0, 0e0, 0e0), 5e-1, false, 4e0, 3e-1);\nreturn result;"))),"solid_red")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14),(21),(22),(23)]),intersection_materials:(ids:(available:[],max:0),storage:{},storage_order:[]),library:(ids:(available:[],max:4),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y, float a, float b) {\n  return max(abs(x)-a+1., abs(y)-b+1.);\n}\n\nfloat triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance < size) return material_inner;\r\n  if (distance < size + border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"portal")},storage_order:[(2),(0),(1),(3)]),animations_filters:(uniforms:({((0)):false,((1)):false,((2)):false,((6)):false,((7)):true,((8)):false,((9)):true,((12)):true}),matrices:({((0)):false,((13)):false,((14)):false,((15)):false,((20)):true,((29)):true,((31)):true,((32)):true,((34)):false}),cameras:({})),elements_descriptions:(uniforms:({((7)):(help_description:None,overrided_name:"Teleport light"),((9)):(help_description:None,overrided_name:"Progress")}),matrices:({((20)):(help_description:None,overrided_name:"Symmetric"),((29)):(help_description:None,overrided_name:"Red portal"),((31)):(help_description:None,overrided_name:"Green portal"),((32)):(help_description:None,overrided_name:"Blue portal")}),cameras:({})),user_uniforms:(uniforms:({((0)):false,((1)):false,((2)):false,((6)):false,((7)):true,((8)):false,((9)):false,((12)):false}),matrices:({((0)):false,((13)):false,((14)):false,((15)):false,((20)):false,((29)):false,((31)):false,((32)):false,((34)):false})),animation_stages:(ids:(available:[],max:2),storage:{(0):Named((name:(eng:"Explore",rus:"Исследование"),description:Some((eng:"- `Symmetric` is set one transformation to three portals simultaneously. I recommend to play with this paramater especially, because you will receive symmetric images.\n- `Red/Green/Blue portal` set transformation for each portal.",rus:"- `Symmetric` задаёт одну трансформацию ко всем трём порталам одновременно. Я особенно рекомендую поиграться с этим параметром, потому что с ним получаются симметричные изображения.\n- `Red/Green/Blue portal` задают трансформации для каждого портала по отдельности.")),uniforms:({((0)):FromDev,((1)):FromDev,((2)):FromDev,((6)):FromDev,((7)):FromDev,((8)):FromDev,((9)):FromDev,((12)):Changed(Some(((14))))}),matrices:({((0)):FromDev,((13)):FromDev,((14)):FromDev,((15)):FromDev,((20)):ProvidedToUser,((29)):ProvidedToUser,((31)):ProvidedToUser,((32)):ProvidedToUser,((34)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"Explore"),(1):Named((name:(eng:"Construct",rus:"Построение"),description:None,uniforms:({((0)):FromDev,((1)):FromDev,((2)):FromDev,((6)):FromDev,((7)):FromDev,((8)):FromDev,((9)):ProvidedToUser,((12)):Changed(Some(((13))))}),matrices:({((0)):FromDev,((13)):FromDev,((14)):FromDev,((15)):FromDev,((20)):FromDev,((29)):FromDev,((31)):FromDev,((32)):FromDev,((34)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"Construct")},storage_order:[(1),(0)]),current_stage:Animation(((0))),dev_stage:(uniforms:({((0)):Float((min:Some(0),max:None,value:4)),((1)):Float((min:Some(0),max:None,value:4)),((2)):Float((min:Some(0),max:None,value:4)),((6)):Progress(0),((7)):Bool(true),((8)):Bool(false),((9)):Progress(0),((12)):Bool(false)}),matrices:({((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((13)):Mul(to:Some(((33))),what:Some(((28)))),((14)):Mul(to:Some(((22))),what:Some(((30)))),((15)):Mul(to:Some(((32))),what:Some(((20)))),((20)):Simple(offset:(0,0,1.3),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((29)):Simple(offset:(-0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((31)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((32)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((34)):Mul(to:Some(((36))),what:Some(((35))))})),animations:(ids:(available:[],max:4),storage:{(0):Named((duration:3,animation_stage:Animation(((1))),uniforms:({((0)):CopyPrev,((1)):CopyPrev,((2)):CopyPrev,((6)):CopyPrev,((7)):CopyPrev,((8)):CopyPrev,((9)):Changed(Some(((15)))),((12)):CopyPrev}),matrices:({((0)):CopyPrev,((13)):CopyPrev,((14)):CopyPrev,((15)):CopyPrev,((20)):CopyPrev,((29)):CopyPrev,((31)):CopyPrev,((32)):CopyPrev,((34)):CopyPrev}),use_prev_cam:false,use_start_cam_as_end:true,cam_start:Some(((0))),cam_end:None,use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:Linear),"v3.construct.1"),(1):Named((duration:3,animation_stage:Animation(((1))),uniforms:({((0)):CopyPrev,((1)):CopyPrev,((2)):CopyPrev,((6)):CopyPrev,((7)):CopyPrev,((8)):CopyPrev,((9)):CopyPrev,((12)):CopyPrev}),matrices:({((0)):CopyPrev,((13)):CopyPrev,((14)):CopyPrev,((15)):CopyPrev,((20)):CopyPrev,((29)):CopyPrev,((31)):CopyPrev,((32)):CopyPrev,((34)):CopyPrev}),use_prev_cam:false,use_start_cam_as_end:false,cam_start:Some(((1))),cam_end:None,use_any_cam_as_start:None,use_any_cam_as_end:Some(false),cam_any_start:None,cam_any_end:Some(((0))),cam_easing:InOut),"v3.construct.0"),(2):Named((duration:2,animation_stage:Animation(((1))),uniforms:({((0)):CopyPrev,((1)):CopyPrev,((2)):CopyPrev,((6)):CopyPrev,((7)):CopyPrev,((8)):CopyPrev,((9)):Changed(Some(((16)))),((12)):CopyPrev}),matrices:({((0)):CopyPrev,((13)):CopyPrev,((14)):CopyPrev,((15)):CopyPrev,((20)):CopyPrev,((29)):CopyPrev,((31)):CopyPrev,((32)):CopyPrev,((34)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:false,cam_start:None,cam_end:Some(((2))),use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:InOut),"v3.construct.2"),(3):Named((duration:6,animation_stage:RealAnimation(((2))),uniforms:({((0)):CopyPrev,((1)):CopyPrev,((2)):CopyPrev,((6)):CopyPrev,((7)):CopyPrev,((8)):CopyPrev,((9)):CopyPrev,((12)):CopyPrev}),matrices:({((0)):CopyPrev,((13)):CopyPrev,((14)):CopyPrev,((15)):CopyPrev,((20)):CopyPrev,((29)):CopyPrev,((31)):CopyPrev,((32)):CopyPrev,((34)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:false,cam_start:None,cam_end:Some(((3))),use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:Linear),"v3.construct.3")},storage_order:[(1),(0),(2),(3)]),use_time:false,skybox:None)